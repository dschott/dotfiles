#!/usr/bin/env bash

! command-exists code jq && exit

cmd="${1}"

case "${cmd}" in
complete)
    _projects_complete() {
        case "${COMP_CWORD}" in
        1)
            cmds="list code open complete"
            mapfile -t COMPREPLY <<< "$(compgen -W "${cmds}" -- "${COMP_WORDS[1]}")"
            ;;

        2)
            cmd="${COMP_WORDS[1]}"
            case "${cmd}" in
            code|open)
                mapfile -t COMPREPLY <<< "$(compgen -W "$(projects list)" -- "${COMP_WORDS[2]}")"
                ;;
            esac
            ;;
        esac
    }
    complete -F _projects_complete projects
    ;;

list)
    if [ -f "${HOME}/.projects" ]; then
        jq -r ".[].name" "${HOME}/.projects"
    fi
    ;;

code|open)
    if [ -f "${HOME}/.projects" ]; then
        name="${2}"
        entry="$(jq ".[] | select(.name == \"${name}\")" "${HOME}/.projects")"
        if [ -z "${entry}" ]; then 
            >&2 echo "project not found! ${name}"
            exit 1
        fi

        case "${cmd}" in
        code)
            path=$(eval echo -e "$(echo "${entry}" | jq -r '.path')")
            repo=$(echo "${entry}" | jq -r '.repo')
            
            vscode-open-git "${path}" "${repo}"
            ;;

        open)
            url=$(echo "${entry}" | jq -r '.url')

            case "$(uname -s)" in
            Darwin)
                open "${url}"
                ;;
            Linux)
                nohup xdg-open "${url}" > /dev/null 2>&1
                ;;
            esac
            ;;
        esac
    fi
    ;;
esac
