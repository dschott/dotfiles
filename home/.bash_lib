#!/usr/bin/env bash

env-setlocal() {
    if [ -z "$1" ]; then
        >&2 echo "environment variable name is required."
        return 1
    fi

    var=${1}
    val=$(sed -n "s/^export ${var}=\(.*\)/\1/p" "${HOME}/.bashrc.local")

    if [ -n "${val}" ]; then
        read -rp "enter ${var} (${val}): " entered
    else
        read -rp "enter ${var}: " entered
    fi

    if [ -n "${entered}" ]; then
        val="${entered}"
    fi

    if [ -n "${val}" ]; then
        set-line "export ${var}=" "export ${var}=${val}" "${HOME}/.bashrc.local"
        # shellcheck disable=SC1090
        . "${HOME}/.bashrc.local"
    fi
}

path-add() {
    if [ -z "${1}" ]; then
        >&2 echo "a path is required"
    else
        esc_path=$(regex-esc "${1}")
        if ! echo "${PATH}" | grep -qe "${esc_path}[:$]"; then
            export PATH="${1}:${PATH}"
        fi
    fi
}

path-remove() {
    if [ -z "${1}" ]; then
        >&2 echo "a path is required"
    else
        PATH=$(echo "${PATH}" | sed -E -e "s;:${1};;" -e "s;${1}:?;;")
        export PATH
    fi
}

if [ "$(hostname)" = "C02XP0MFJGH5" ]; then
    code-genomics() {
        vscode-open-git "${GOPATH}/src/github.platforms.engineering/graphroots/genomics" "git@github.platforms.engineering:graphroots/genomics"
    }

    code-genomics-deploy() {
        vscode-open-git "${GOPATH}/projects/genomics-deploy" "git@github.platforms.engineering:graphroots/genomics-deploy"
    }

    code-genomics-wiki() {
        vscode-open-git "${HOME}/projects/genomics.wiki" "git@github.platforms.engineering:graphroots/genomics.wiki"
    }

    code-gokit() {
        vscode-open-git "${GOPATH}/src/github.platforms.engineering/graphroots/gokit" "git@github.platforms.engineering:graphroots/gokit"
    }

    code-docs() {
        vscode-open-git "${HOME}/projects/docs" "git@github.platforms.engineering:graphroots/docs"
    }


    code-golang-build() {
        vscode-open-git "${GOPATH}/src/github.platforms.engineering/graphroots/golang-build" "git@github.platforms.engineering:graphroots/golang-build"
    }

    code-product360-apis() {
        vscode-open-git "${HOME}/projects/product360-apis" "git@github.platforms.engineering:GraphRoots/product360-apis"
    }

    vault-login-bayer() {
        vault login -method=userpass -path=ping username=GKRPS
    }

    vpn-connect-bayer() {
        vpn-connect "Standard VPN - IRV"
        proxy-off
    }

    vpn-disconnect-bayer() {
        vpn-disconnect
        proxy-off
    }

    proxy-on-bayer() {
        proxy-on
        proxy-seturl "http://pac.hybrid-web.global.blackspider.com/proxy.pac?p=4m92bzff"
    }

    bayernet-open() {
        vpn-disconnect
        proxy-on-bayer
        vpn-connect "Standard VPN - IRV"
        open "https://new.bayernet.cnb/en"
    }
fi
